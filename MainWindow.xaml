<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Lazar_Sorin_Lab6"
        xmlns:AutoGeistModel="clr-namespace:AutoGeistModel;assembly=AutoGeistModel" x:Class="Lazar_Sorin_Lab6.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="437" Width="698" Loaded="Window_Loaded">
    <Window.Resources>
        <CollectionViewSource x:Key="carViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoGeistModel:Car}, CreateList=True}"/>
        <CollectionViewSource x:Key="customerViewSource" d:DesignSource="{d:DesignInstance {x:Type AutoGeistModel:Customer}, CreateList=True}"/>
        <CollectionViewSource x:Key="carOrdersViewSource" Source="{Binding Orders, Source={StaticResource carViewSource}}"/>
        <ControlTemplate x:Key="validationTemplate">
            <DockPanel>
                <TextBlock Foreground="Red" FontSize="20">!</TextBlock>
                <AdornedElementPlaceholder/>
            </DockPanel>
        </ControlTemplate>
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="193*"/>
            <ColumnDefinition Width="203*"/>
        </Grid.ColumnDefinitions>
        <TabControl x:Name="tbCtrlAutoGeist"  HorizontalAlignment="Left" Height="396" Margin="284,0,0,0" VerticalAlignment="Top" Width="396" Grid.ColumnSpan="2">
            <TabItem Header="Cars">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource carViewSource}" Margin="0,-1,-2,-1" Height="370" VerticalAlignment="Top">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="47*"/>
                        <ColumnDefinition Width="62*"/>
                        <ColumnDefinition Width="461*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="121*"/>
                        <RowDefinition Height="200*"/>
                        <RowDefinition Height="60*"/>
                    </Grid.RowDefinitions>
                    <DataGrid x:Name="carDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="10,10,10,159" RowDetailsVisibilityMode="VisibleWhenSelected" Grid.RowSpan="2" Grid.ColumnSpan="3">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="bodyStyleColumn" Binding="{Binding BodyStyle}" Header="Body Style" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="carIdColumn" Binding="{Binding CarId}" Header="Car Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="makeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="modelColumn" Binding="{Binding Model}" Header="Model" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid1" HorizontalAlignment="Left" Margin="10,105,0,0" VerticalAlignment="Top" Height="135" Width="372" Grid.RowSpan="2" Grid.Row="1" Grid.ColumnSpan="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Body Style:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="bodyStyleTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding BodyStyle, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Car Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="carIdTextBox" IsEnabled="False" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding CarId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Make:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="makeTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding Make, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                        <Label Content="Model:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <TextBox x:Name="modelTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="3" Text="{Binding Model, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120"/>
                    </Grid>
                    <Button Content="Previous" x:Name="btnPrev" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top" Width="76" Grid.Row="1" Grid.ColumnSpan="3" Click="btnPrev_Click"/>
                    <Button Content="Next" x:Name="btnNext" Grid.Column="2" HorizontalAlignment="Left" Margin="232,61,0,0" VerticalAlignment="Top" Width="75" Grid.Row="1" Click="btnNext_Click"/>
                </Grid>
            </TabItem>
            <TabItem Header="Customers">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource carViewSource}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*"/>
                        <ColumnDefinition Width="378*"/>
                    </Grid.ColumnDefinitions>
                    <Button Content="Previous" x:Name="btnPrevCust" Grid.Column="1" HorizontalAlignment="Left" Margin="5,176,0,0" VerticalAlignment="Top" Width="74" Click="btnPrevCust_Click"/>
                    <Button Content="Next" x:Name="btnNextCust"  Grid.Column="1" HorizontalAlignment="Left" Margin="301,176,0,0" VerticalAlignment="Top" Width="74" RenderTransformOrigin="0.595,0.5" Click="btnNextCust_Click"/>
                    <DataGrid x:Name="customerDataGrid" AutoGenerateColumns="False" Grid.Column="1" EnableRowVirtualization="True" ItemsSource="{Binding Source={StaticResource customerViewSource}}" Margin="10,10,10,211" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="custIdColumn" Binding="{Binding CustId}" Header="Cust Id" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="firstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="lastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTemplateColumn x:Name="purchaseDateColumn" Header="Purchase Date" Width="SizeToHeader">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <DatePicker SelectedDate="{Binding PurchaseDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Grid x:Name="grid2" Grid.Column="1" DataContext="{StaticResource customerViewSource}" HorizontalAlignment="Left" Margin="5,216,0,0" VerticalAlignment="Top" Height="142" Width="359">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="Cust Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBox x:Name="custIdTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="0" Text="{Binding CustId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" IsEnabled="False"/>
                        <Label Content="First Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="1" VerticalAlignment="Center"/>
                        <TextBox x:Name="firstNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="1" Text="{Binding FirstName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Last Name:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox x:Name="lastNameTextBox" Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="3" Grid.Row="2" Text="{Binding LastName, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center" Width="120" Validation.ErrorTemplate="{StaticResource validationTemplate}" Style="{StaticResource textBoxInError}"/>
                        <Label Content="Purchase Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="3" Grid.Row="3" VerticalAlignment="Center"/>
                        <DatePicker x:Name="purchaseDatePicker" Grid.Column="1" HorizontalAlignment="Left" Margin="3" Grid.Row="3" SelectedDate="{Binding PurchaseDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" VerticalAlignment="Center"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem Header="Orders">
                <Grid Background="#FFE5E5E5" DataContext="{StaticResource carOrdersViewSource}">
                    <ComboBox x:Name="cbCars" HorizontalAlignment="Left" Margin="42,83,0,0" VerticalAlignment="Top" Width="123" Height="33" SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.CarId, Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} - {1}">
                                            <Binding Path="Make"/>
                                            <Binding Path="Model"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ComboBox x:Name="cbCustomers" HorizontalAlignment="Left" Margin="226,83,0,0" VerticalAlignment="Top" Width="123" Height="33" SelectedValue="{Binding ElementName=ordersDataGrid,Path=SelectedItem.CustId,Mode=OneWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock>
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0} {1}">
                                            <Binding Path="FirstName"/>
                                            <Binding Path="LastName"/>
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Label Content="Cars" HorizontalAlignment="Left" Margin="42,52,0,0" VerticalAlignment="Top"/>
                    <Label Content="Customers" HorizontalAlignment="Left" Margin="226,52,0,0" VerticalAlignment="Top"/>
                    <DataGrid x:Name="ordersDataGrid" AutoGenerateColumns="False" EnableRowVirtualization="True" ItemsSource="{Binding}" Margin="42,160,41,56" RowDetailsVisibilityMode="VisibleWhenSelected">
                        <DataGrid.Columns>
                            <DataGridTextColumn x:Name="FirstNameColumn" Binding="{Binding FirstName}" Header="First Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="LastNameColumn" Binding="{Binding LastName}" Header="Last Name" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="MakeColumn" Binding="{Binding Make}" Header="Make" Width="SizeToHeader"/>
                            <DataGridTextColumn x:Name="ModelColumn" Binding="{Binding Model}" Header="Model" Width="SizeToHeader"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>
            </TabItem>
        </TabControl>
        <GroupBox Header="CRUD" x:Name="gbOperations" Button.Click="gbOperations_Click" HorizontalAlignment="Left" Height="96" Margin="68,42,0,0" VerticalAlignment="Top" Width="100">
            <StackPanel HorizontalAlignment="Left" Height="71" Margin="0,0,-2,0" VerticalAlignment="Top" Width="90">
                <Button Content="New" x:Name="btnNew" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" Height="23" Click="btnNew_Click"/>
                <Button Content="Edit" x:Name="btnEdit" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" Height="23" Click="btnEdit_Click"/>
                <Button Content="Delete" x:Name="btnDelete" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" Height="23" Click="btnDelete_Click"/>
            </StackPanel>
        </GroupBox>
        <GroupBox Header="Actions" x:Name="gbActions" HorizontalAlignment="Left" Height="73" Margin="68,205,0,0" VerticalAlignment="Top" Width="100">
            <StackPanel HorizontalAlignment="Left" Height="52" Margin="0,0,-2,0" VerticalAlignment="Top" Width="90">
                <Button Content="Save" x:Name="btnSave" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" Height="23" Click="btnSave_Click">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="IsEnabled" Value="false" />
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=firstNameTextBox, Path=(Validation.HasError)}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="true" />
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Cancel" x:Name="btnCancel" HorizontalAlignment="Left" VerticalAlignment="Top" Width="90" Height="23" Click="btnCancel_Click"/>
            </StackPanel>
        </GroupBox>

    </Grid>
</Window>
